# Generated by Django 2.2.1 on 2019-06-13 08:56

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Problems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=40, verbose_name='Название задачи')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', verbose_name='Описание задачи')),
                ('epsilon', models.CharField(blank=True, default='0.01', max_length=20, verbose_name='Точность')),
                ('max_vm_size', models.IntegerField(blank=True, default=64, verbose_name='Ограничение по памяти МБ')),
                ('max_exec_time', models.IntegerField(blank=True, default=5, verbose_name='Ограничение времени исполнения (сек)')),
                ('tests_examples', models.TextField(blank=True, default='', verbose_name='JSON с входными и выходными данными')),
                ('tests', models.TextField(verbose_name='JSON с тестами')),
                ('comparison', models.CharField(choices=[('cmp_file', 'Cравнение двух файлов'), ('cmp_file_nospace', 'Cравнение двух файлов с игнорированием повторяющихся пробелов'), ('cmp_bytes', 'Cравнение двух файлов байт в байт'), ('cmp_int', 'Cравнение двух знаковых 32-битных целых чисел'), ('cmp_int_seq', 'Cравнение двух последовательностей знаковых 32-битных целых чисел'), ('cmp_long_long', 'Cравнение двух знаковых 64-битных целых чисел'), ('cmp_long_long_seq', 'Сравнение двух последовательностей знаковых 64-битных целых чисел'), ('cmp_unsigned_int', 'Cравнение двух беззнаковых 32-битных целых чисел'), ('cmp_unsigned_int_seq', 'Cравнение двух последовательностей беззнаковых 32-битных целых чисел'), ('cmp_unsigned_long_long', 'Cравнение двух беззнаковых 64-битных целых чисел'), ('cmp_unsigned_long_long_seq', 'Cравнение двух последовательностей беззнаковых 64-битных целых чисел'), ('cmp_huge_int', 'Cравнение двух целых чисел произвольного размера'), ('cmp_double', 'Cравнение двух вещественных чисел двойной точности с заданной максимальной ошибкой'), ('cmp_double_seq', 'Cравнение двух последовательностей вещественных чисел двойной точности с заданной максимальной ошибкой'), ('cmp_long_double', 'Cравнение двух вещественных чисел расширенной точности с заданной максимальной ошибкой'), ('cmp_long_double_seq', 'Cравнение двух последовательностей вещественных чисел расширенной точности с заданной максимальной ошибкой'), ('cmp_sexpr', 'Cравнение двух вещественных чисел расширенной точности с заданной максимальной ошибкой'), ('cmp_yesno', 'Сравнение двух ответов YES или NO')], max_length=40, verbose_name='Тип сравнения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата обновления')),
                ('owner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name_plural': 'Задачи',
                'db_table': 'problems',
                'verbose_name': 'Задачу',
            },
        ),
    ]
